digraph afd {
		edge [label="Îµ"];
		S;
		S -> id_S;
		S -> intcon_S;
		S -> realcon_S;
		S -> charcon_S;
		S -> stringcon_S;
		S -> comentario_S;
		S -> sinal_S;

	subgraph cluster_id {
		label="id";
		style="filled";
		color="aqua";

		id_S [label="S" shape=circle];
		id_A [label="A" shape=circle];
		id_B [label="B" shape=doublecircle];

		id_S -> id_S [label="sublinha"];
		id_S -> id_A [label="letra"];
		id_A -> id_A [label="letra, digito, sublinha"];
		id_A -> id_B [label="outro*"];
	}

	subgraph cluster_intcon {
		label="intcon";
		style="filled";
		color="brown";

		intcon_S [label="S" shape=circle];
		intcon_A [label="A" shape=circle];
		intcon_B [label="B" shape=doublecircle];

		intcon_S -> intcon_A [label="digito"];
		intcon_A -> intcon_A [label="digito"];
		intcon_A -> intcon_B [label="outro*"];
	}

	subgraph cluster_realcon {
		label="realcon";
		style="filled";
		color="chocolate";

		realcon_S [label="S" shape=circle];
		realcon_A [label="A" shape=circle];
		realcon_B [label="B" shape=circle];
		realcon_C [label="C" shape=circle];
		realcon_D [label="D" shape=doublecircle];

		realcon_S -> realcon_A [label="intcon"];
		realcon_A -> realcon_A [label="intcon"];
		realcon_A -> realcon_B [label="ponto"];
		realcon_B -> realcon_C [label="intcon"];
		realcon_C -> realcon_C [label="intcon"];
		realcon_C -> realcon_D [label="outro*"];
	}

	subgraph cluster_charcon {
		label="charcon";
		style="filled";
		color="darkorange";

		charcon_S [label="S" shape=circle];
		charcon_A [label="A" shape=circle];
		charcon_B [label="B" shape=circle];
		charcon_C [label="C" shape=circle];
		charcon_D [label="D" shape=doublecircle];

		charcon_S -> charcon_A [label="apostrofo"];
		charcon_A -> charcon_B [label="ch, \\n, \\0"];
		charcon_B -> charcon_C [label="apostrofo"];
		charcon_C -> charcon_D [label="outro*"];
	}

	subgraph cluster_stringcon {
		label="stringcon";
		style="filled";
		color="seagreen";

		stringcon_S [label="S" shape=circle];
		stringcon_A [label="A" shape=circle];
		stringcon_B [label="B" shape=circle];
		stringcon_C [label="C" shape=circle];
		stringcon_D [label="D" shape=doublecircle];

		stringcon_S -> stringcon_A [label="aspas"];
		stringcon_A -> stringcon_B [label="aspas"];
		stringcon_A -> stringcon_C [label="ch"];
		stringcon_C -> stringcon_B [label="aspas"];
		stringcon_B -> stringcon_D [label="outro*"];
	}

	subgraph cluster_comentario {
		label="comentario";
		style="filled";
		color="hotpink";

		comentario_S [label=S shape=circle];
		comentario_A [label=A shape=circle];
		comentario_B [label=B shape=circle];
		comentario_C [label=C shape=doublecircle];

		comentario_S -> comentario_A [label="barra"];
		comentario_A -> comentario_B [label="barra"];
		comentario_B -> comentario_B [label="outro*"];
		comentario_B -> comentario_C [label="\\n"];
	}

	/* sinal */
	/* tem que levar em conta outro* */
	/* +, -, *, /, >, >=, <, <=, =, ==, (, ), [, ], ||, &, &&, ,, !, != */

	subgraph cluster_sinal {
		label="sinal";
		style="filled";
		color="darkorchid1";

		sinal_S [label=S shape=circle];
		sinal_A [label=A shape=circle];
		sinal_B [label=B shape=doublecircle];
		sinal_C [label=C shape=circle];
		sinal_D [label=D shape=circle];
		sinal_E [label=E shape=circle];
		sinal_F [label=F shape=circle];
		sinal_G [label=G shape=circle];
		sinal_H [label=H shape=circle];

		sinal_S -> sinal_A [label="+, -, *, /, (, ), [, ], ,"];
		sinal_A -> sinal_B [label="outro*"];

		sinal_S -> sinal_C [label=">, <, !"];
		sinal_C -> sinal_B [label="outro*"];
		sinal_C -> sinal_D [label="="];
		sinal_D -> sinal_B [label="outro*"];

		sinal_S -> sinal_E [label="&"];
		sinal_E -> sinal_B [label="outro*"];
		sinal_E -> sinal_F [label="&"];
		sinal_F -> sinal_B [label="outro*"];

		sinal_S -> sinal_G [label="|"];
		sinal_G -> sinal_B [label="outro*"];
		sinal_G -> sinal_H [label="|"];
		sinal_H -> sinal_B [label="outro*"];
	}

	/* idconst? leva em conta o ID: nao e lexico */
	/* idproc?: ID: pela especificacao: nao e lexico */

	/* reservadas: */
	/* utilizar constantes para elas, identificando qual palavra reservada eh */
	/* const, pr, init, endp, char, int, real, bool, do, while, endw, var, from, to, dt, by, if, endv, elif, else, endi, getout, getint, getchar, getreal, putint, putchar, putreal */
	/* nao tem afd, verificacao por tabela de palavras reservadas */


}
